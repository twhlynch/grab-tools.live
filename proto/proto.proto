syntax = "proto3";

package COD.Level;

message Level
{
  uint32 formatVersion = 1;

  string title = 2;
  string creators = 3;
  string description = 4;
  uint32 complexity = 5;
  uint32 maxCheckpointCount = 7;
  repeated string tags = 9;

  AmbienceSettings ambienceSettings = 8;

  repeated LevelNode levelNodes = 6;

  uint64 defaultSpawnPointID = 10;
}

//types.proto
message Vector
{
  float x = 1;
  float y = 2;
  float z = 3;
}

message Vector2
{
  float x = 1;
  float y = 2;
}

message Quaternion
{
  float x = 1;
  float y = 2;
  float z = 3;
  float w = 4;
}

message Color
{
  float r = 1;
  float g = 2;
  float b = 3;
  float a = 4;
}

message AmbienceSettings
{
  Color skyZenithColor = 1;
  Color skyHorizonColor = 2;

  float sunAltitude = 3;
  float sunAzimuth = 4;
  float sunSize = 5;

  float fogDensity = 6;
}

enum LevelNodeShape
{
  START = 0;
  FINISH = 1;
  SIGN = 2;
  GRAVITY = 3;
  LOBBYTERMINAL = 4;
  PARTICLE_EMITTER = 5;

  __END_OF_SPECIAL_PARTS__ = 6;

  CUBE = 1000;
  SPHERE = 1001;
  CYLINDER = 1002;
  PYRAMID = 1003;
  PRISM = 1004;
  CONE = 1005;
  PYRAMIDSQUARE = 1006;
}

enum LevelNodeMaterial
{
  DEFAULT = 0;
  GRABBABLE = 1;
  ICE = 2;
  LAVA = 3;
  WOOD = 4;
  GRAPPLABLE = 5;
  GRAPPLABLE_LAVA = 6;

  GRABBABLE_CRUMBLING = 7;
  DEFAULT_COLORED = 8;
  BOUNCING = 9;
  SNOW = 10;

  TRIGGER = 11;
}

message LevelNodeGroup
{
  Vector position = 1;
  Vector scale = 2;
  Quaternion rotation = 3;

  repeated LevelNode childNodes = 4;
}

message LevelNodeStart
{
  Vector position = 1;
  Quaternion rotation = 2;
  float radius = 3;
  string name = 4;
}

message LevelNodeFinish
{
  Vector position = 1;
  float radius = 2;
}

message LevelNodeStatic
{
  LevelNodeShape shape = 1;
  LevelNodeMaterial material = 2;

  Vector position = 3;
  Vector scale = 4;
  Quaternion rotation = 5;

  Color color1 = 6;
  Color color2 = 9;

  bool isNeon = 7;
  bool isTransparent = 8;
}

message LevelNodeCrumbling
{
  LevelNodeShape shape = 1;
  LevelNodeMaterial material = 2;

  Vector position = 3;
  Vector scale = 4;
  Quaternion rotation = 5;

  float stableTime = 6;
  float respawnTime = 7;
}

message LevelNodeSign
{
  Vector position = 1;
  Quaternion rotation = 2;

  string text = 3;
}

message LevelNodeGravity
{
  enum Mode
  {
    DEFAULT = 0;
    NOLEGS = 1;
  }

  Mode mode = 1;

  Vector position = 2;
  Vector scale = 3;
  Quaternion rotation = 4;

  Vector direction = 5;
}

message LevelNodeLobbyTerminal
{
  Vector position = 2;
  Quaternion rotation = 4;
}

message LevelNodeParticleEmitter
{
  Vector position = 1;
  Vector scale = 2;
  Quaternion rotation = 3;

  uint32 particlesPerSecond = 5;

  Vector2 lifeSpan = 6;
  Color startColor = 7;
  Color endColor = 8;
  Vector2 startSize = 9;
  Vector2 endSize = 10;
  
  Vector velocity = 14;
  Vector velocityMin = 15;
  Vector velocityMax = 16;
  Vector accelerationMin = 17;
  Vector accelerationMax = 18;
}

message TriggerSourceBasic
{
  enum Type
  {
    HAND = 0;
    HEAD = 1;
    GRAPPLE = 2;
    FEET = 3;
    BLOCK = 4;
  }

  Type type = 1;
}

message TriggerSource
{
  oneof content
  {
    TriggerSourceBasic triggerSourceBasic = 1;
  }
}

message TriggerTargetAnimation
{
  enum Mode
  {
    STOP = 0;
    START = 1;
    TOGGLE = 2;
    TOGGLE_REVERSE = 3;
    RESTART = 4;
    RESET = 5;
  }

  uint64 objectID = 1;
  string animationName = 2;
  
  bool loop = 3;
  bool reverse = 4;

  Mode mode = 10;
}

message TriggerTargetSubLevel
{
  string levelIdentifier = 1;
  string spawnPoint = 2;
}

message TriggerTarget
{
  oneof content
  {
    TriggerTargetAnimation triggerTargetAnimation = 1;
    TriggerTargetSubLevel triggerTargetSubLevel = 2;
    TriggerTargetSound triggerTargetSound = 3;
  }
}

message TriggerTargetSound
{
  enum Mode
  {
    STOP = 0;
    START = 1;
    TOGGLE = 2;
    RESTART = 3;
    RESET = 4;
  }

  uint64 objectID = 1;

  Mode mode = 2;
  bool repeat = 3;
}

message LevelNodeTrigger
{
  LevelNodeShape shape = 1;

  Vector position = 2;
  Vector scale = 3;
  Quaternion rotation = 4;

  bool isShared = 5;

  repeated TriggerSource triggerSources = 6;
  repeated TriggerTarget triggerTargets = 7;
}

message AnimationFrame
{
  float time = 1;
  Vector position = 2;
  Quaternion rotation = 3;
}

message Animation
{
  enum Direction
  {
    RESTART = 0;
    PINGPONG = 1;
  }

  string name = 1;
  repeated AnimationFrame frames = 2;
  Direction direction = 3;
  float speed = 4;
}

message SoundGeneratorParameters
{
  enum WaveType
  {
    Square = 0;
    Sawtooth = 1;
    Sine = 2;
    Noise = 3;
  }

  float volume = 1;

  WaveType waveType = 2;

  float envelopeAttack = 3;
  float envelopeSustain = 4;
  float envelopeRelease = 5;
  float envelopePunch = 6;

  float frequencyBase = 7;
  float frequencyLimit = 8;
  float frequencyRamp = 9;
  float frequencyDeltaRamp = 10;

  float vibratoStrength = 11;
  float vibratoSpeed = 12;

  float pitchJumpMod = 13;
  float pitchJumpSpeed = 14;

  float dutyCycle = 15;
  float dutyCycleRamp = 16;

  float repeatSpeed = 17;

  float flangerFrequency = 18;
  float flangerDepth = 19;

  float lowPassFilterFrequency = 20;
  float highPassFilterFrequency = 21;
  
  float reverbDelay = 22;
  float reverbDecayFactor = 23;
}

message LevelNodeSound
{
  Vector position = 1;
  Quaternion rotation = 7;

  SoundGeneratorParameters parameters = 2;
  string name = 3;
  bool repeat = 4;
  float volume = 5;
  bool startActive = 6;
  float maxRangeFactor = 8;
}

message LevelNode
{
  bool isLocked = 6;

  oneof content
  {
    LevelNodeStart levelNodeStart = 1;
    LevelNodeFinish levelNodeFinish = 2;
    LevelNodeStatic levelNodeStatic = 3;
    LevelNodeSign levelNodeSign = 4;
    LevelNodeCrumbling levelNodeCrumbling = 5;
    LevelNodeGroup levelNodeGroup = 7;
    LevelNodeGravity levelNodeGravity = 8;
    LevelNodeLobbyTerminal levelNodeLobbyTerminal = 9;
    LevelNodeTrigger levelNodeTrigger = 10;
    LevelNodeParticleEmitter levelNodeParticleEmitter = 11;
    LevelNodeSound levelNodeSound = 12;
  }

  repeated Animation animations = 15;
  int32 activeAnimation = 16;
}
